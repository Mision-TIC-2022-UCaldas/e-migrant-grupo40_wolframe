// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyecto.Data;

namespace proyecto.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211129100450_v15")]
    partial class v15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("proyecto.Models.AsignarEmergenciasMigrante", b =>
                {
                    b.Property<int>("IdAsignarEmergenciasMigrante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEmergenciasMigrantes")
                        .HasColumnType("int");

                    b.Property<int>("IdEntidadEmergencia")
                        .HasColumnType("int");

                    b.HasKey("IdAsignarEmergenciasMigrante");

                    b.HasIndex("IdEmergenciasMigrantes");

                    b.HasIndex("IdEntidadEmergencia");

                    b.ToTable("AsignarEmergenciasMigrante");
                });

            modelBuilder.Entity("proyecto.Models.EmergenciasMigrantes", b =>
                {
                    b.Property<int>("IdEmergenciasMigrantes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMigrante")
                        .HasColumnType("int");

                    b.Property<string>("Tipoemergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmergenciasMigrantes");

                    b.HasIndex("IdMigrante");

                    b.ToTable("EmergenciasMigrantes");
                });

            modelBuilder.Entity("proyecto.Models.Entidad", b =>
                {
                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nit");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("proyecto.Models.EntidadServicioEmergencia", b =>
                {
                    b.Property<int>("IdEntidadServicioEmergencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEntidadServicioEmergencia");

                    b.ToTable("EntidadServicioEmergencia");
                });

            modelBuilder.Entity("proyecto.Models.FamiliaAmigos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMigrantes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacionlaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAfinidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipodoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("migrantesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("migrantesId");

                    b.ToTable("FamiliaAmigos");
                });

            modelBuilder.Entity("proyecto.Models.MigranteNecesidad", b =>
                {
                    b.Property<int>("IdMigranteNecesidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMigrante")
                        .HasColumnType("int");

                    b.Property<string>("Necesidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prioridad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMigranteNecesidad");

                    b.HasIndex("IdMigrante");

                    b.ToTable("MigranteNecesidad");
                });

            modelBuilder.Entity("proyecto.Models.MigranteServicio", b =>
                {
                    b.Property<int>("IdMigranteServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMigrantes")
                        .HasColumnType("int");

                    b.Property<int>("IdServicioEntidad")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMigranteServicio");

                    b.HasIndex("IdMigrantes");

                    b.HasIndex("IdServicioEntidad");

                    b.ToTable("MigranteServicio");
                });

            modelBuilder.Entity("proyecto.Models.Novedad", b =>
                {
                    b.Property<int>("IdNovedades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroDias")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNovedades");

                    b.ToTable("Novedades");
                });

            modelBuilder.Entity("proyecto.Models.SuplirNecesidad", b =>
                {
                    b.Property<int>("IdMigranteServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMigranteNecesidad")
                        .HasColumnType("int");

                    b.Property<int>("IdServicioEntidad")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMigranteServicio");

                    b.HasIndex("IdMigranteNecesidad");

                    b.HasIndex("IdServicioEntidad");

                    b.ToTable("MigranteServicioEntidad");
                });

            modelBuilder.Entity("proyecto.Models.calificarapp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("calificacion")
                        .HasColumnType("int");

                    b.Property<string>("comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("calificarapp");
                });

            modelBuilder.Entity("proyecto.Models.migrantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacionlaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipodoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("migrantes");
                });

            modelBuilder.Entity("proyecto.Models.servicios", b =>
                {
                    b.Property<int>("IdServicioEntidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInico")
                        .HasColumnType("datetime2");

                    b.Property<string>("NitEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("int");

                    b.HasKey("IdServicioEntidad");

                    b.HasIndex("NitEntidad");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("proyecto.Models.AsignarEmergenciasMigrante", b =>
                {
                    b.HasOne("proyecto.Models.EmergenciasMigrantes", "EmergenciasMigrantes")
                        .WithMany()
                        .HasForeignKey("IdEmergenciasMigrantes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.EntidadServicioEmergencia", "EntidadServicioEmergencia")
                        .WithMany()
                        .HasForeignKey("IdEntidadEmergencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmergenciasMigrantes");

                    b.Navigation("EntidadServicioEmergencia");
                });

            modelBuilder.Entity("proyecto.Models.EmergenciasMigrantes", b =>
                {
                    b.HasOne("proyecto.Models.migrantes", "migrantes")
                        .WithMany()
                        .HasForeignKey("IdMigrante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("migrantes");
                });

            modelBuilder.Entity("proyecto.Models.FamiliaAmigos", b =>
                {
                    b.HasOne("proyecto.Models.migrantes", "migrantes")
                        .WithMany()
                        .HasForeignKey("migrantesId");

                    b.Navigation("migrantes");
                });

            modelBuilder.Entity("proyecto.Models.MigranteNecesidad", b =>
                {
                    b.HasOne("proyecto.Models.migrantes", "Migrantes")
                        .WithMany()
                        .HasForeignKey("IdMigrante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Migrantes");
                });

            modelBuilder.Entity("proyecto.Models.MigranteServicio", b =>
                {
                    b.HasOne("proyecto.Models.migrantes", "Migrantes")
                        .WithMany()
                        .HasForeignKey("IdMigrantes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.servicios", "Servicios")
                        .WithMany()
                        .HasForeignKey("IdServicioEntidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Migrantes");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("proyecto.Models.SuplirNecesidad", b =>
                {
                    b.HasOne("proyecto.Models.MigranteNecesidad", "Migrantes")
                        .WithMany()
                        .HasForeignKey("IdMigranteNecesidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.servicios", "Servicios")
                        .WithMany()
                        .HasForeignKey("IdServicioEntidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Migrantes");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("proyecto.Models.servicios", b =>
                {
                    b.HasOne("proyecto.Models.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("NitEntidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entidad");
                });
#pragma warning restore 612, 618
        }
    }
}
